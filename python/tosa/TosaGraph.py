# automatically generated by the FlatBuffers compiler, do not modify

# namespace: tosa

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TosaGraph(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TosaGraph()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTosaGraph(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def TosaGraphBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x54\x4F\x53\x41", size_prefixed=size_prefixed)

    # TosaGraph
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TosaGraph
    def Version(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from tosa.Version import Version
            obj = Version()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TosaGraph
    def Blocks(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from tosa.TosaBasicBlock import TosaBasicBlock
            obj = TosaBasicBlock()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TosaGraph
    def BlocksLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # TosaGraph
    def BlocksIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

def Start(builder): builder.StartObject(2)
def TosaGraphStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddVersion(builder, version): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(version), 0)
def TosaGraphAddVersion(builder, version):
    """This method is deprecated. Please switch to AddVersion."""
    return AddVersion(builder, version)
def AddBlocks(builder, blocks): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(blocks), 0)
def TosaGraphAddBlocks(builder, blocks):
    """This method is deprecated. Please switch to AddBlocks."""
    return AddBlocks(builder, blocks)
def StartBlocksVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def TosaGraphStartBlocksVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartBlocksVector(builder, numElems)
def End(builder): return builder.EndObject()
def TosaGraphEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)